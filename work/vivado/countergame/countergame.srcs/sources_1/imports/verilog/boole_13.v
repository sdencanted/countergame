/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module boole_13 (
    input [5:0] alufn,
    input [15:0] a,
    input [15:0] b,
    output reg [15:0] c
  );
  
  
  
  always @* begin
    c = 16'h0000;
    
    case (b[0+0-:1])
      1'h0: begin
        
        case (a[0+0-:1])
          1'h0: begin
            c[0+0-:1] = alufn[0+0-:1];
          end
          1'h1: begin
            c[0+0-:1] = alufn[1+0-:1];
          end
        endcase
      end
      1'h1: begin
        
        case (a[0+0-:1])
          1'h0: begin
            c[0+0-:1] = alufn[2+0-:1];
          end
          1'h1: begin
            c[0+0-:1] = alufn[3+0-:1];
          end
        endcase
      end
    endcase
    
    case (b[1+0-:1])
      1'h0: begin
        
        case (a[1+0-:1])
          1'h0: begin
            c[1+0-:1] = alufn[0+0-:1];
          end
          1'h1: begin
            c[1+0-:1] = alufn[1+0-:1];
          end
        endcase
      end
      1'h1: begin
        
        case (a[1+0-:1])
          1'h0: begin
            c[1+0-:1] = alufn[2+0-:1];
          end
          1'h1: begin
            c[1+0-:1] = alufn[3+0-:1];
          end
        endcase
      end
    endcase
    
    case (b[2+0-:1])
      1'h0: begin
        
        case (a[2+0-:1])
          1'h0: begin
            c[2+0-:1] = alufn[0+0-:1];
          end
          1'h1: begin
            c[2+0-:1] = alufn[1+0-:1];
          end
        endcase
      end
      1'h1: begin
        
        case (a[2+0-:1])
          1'h0: begin
            c[2+0-:1] = alufn[2+0-:1];
          end
          1'h1: begin
            c[2+0-:1] = alufn[3+0-:1];
          end
        endcase
      end
    endcase
    
    case (b[3+0-:1])
      1'h0: begin
        
        case (a[3+0-:1])
          1'h0: begin
            c[3+0-:1] = alufn[0+0-:1];
          end
          1'h1: begin
            c[3+0-:1] = alufn[1+0-:1];
          end
        endcase
      end
      1'h1: begin
        
        case (a[3+0-:1])
          1'h0: begin
            c[3+0-:1] = alufn[2+0-:1];
          end
          1'h1: begin
            c[3+0-:1] = alufn[3+0-:1];
          end
        endcase
      end
    endcase
    
    case (b[4+0-:1])
      1'h0: begin
        
        case (a[4+0-:1])
          1'h0: begin
            c[4+0-:1] = alufn[0+0-:1];
          end
          1'h1: begin
            c[4+0-:1] = alufn[1+0-:1];
          end
        endcase
      end
      1'h1: begin
        
        case (a[4+0-:1])
          1'h0: begin
            c[4+0-:1] = alufn[2+0-:1];
          end
          1'h1: begin
            c[4+0-:1] = alufn[3+0-:1];
          end
        endcase
      end
    endcase
    
    case (b[5+0-:1])
      1'h0: begin
        
        case (a[5+0-:1])
          1'h0: begin
            c[5+0-:1] = alufn[0+0-:1];
          end
          1'h1: begin
            c[5+0-:1] = alufn[1+0-:1];
          end
        endcase
      end
      1'h1: begin
        
        case (a[5+0-:1])
          1'h0: begin
            c[5+0-:1] = alufn[2+0-:1];
          end
          1'h1: begin
            c[5+0-:1] = alufn[3+0-:1];
          end
        endcase
      end
    endcase
    
    case (b[6+0-:1])
      1'h0: begin
        
        case (a[6+0-:1])
          1'h0: begin
            c[6+0-:1] = alufn[0+0-:1];
          end
          1'h1: begin
            c[6+0-:1] = alufn[1+0-:1];
          end
        endcase
      end
      1'h1: begin
        
        case (a[6+0-:1])
          1'h0: begin
            c[6+0-:1] = alufn[2+0-:1];
          end
          1'h1: begin
            c[6+0-:1] = alufn[3+0-:1];
          end
        endcase
      end
    endcase
    
    case (b[7+0-:1])
      1'h0: begin
        
        case (a[7+0-:1])
          1'h0: begin
            c[7+0-:1] = alufn[0+0-:1];
          end
          1'h1: begin
            c[7+0-:1] = alufn[1+0-:1];
          end
        endcase
      end
      1'h1: begin
        
        case (a[7+0-:1])
          1'h0: begin
            c[7+0-:1] = alufn[2+0-:1];
          end
          1'h1: begin
            c[7+0-:1] = alufn[3+0-:1];
          end
        endcase
      end
    endcase
    
    case (b[8+0-:1])
      1'h0: begin
        
        case (a[8+0-:1])
          1'h0: begin
            c[8+0-:1] = alufn[0+0-:1];
          end
          1'h1: begin
            c[8+0-:1] = alufn[1+0-:1];
          end
        endcase
      end
      1'h1: begin
        
        case (a[8+0-:1])
          1'h0: begin
            c[8+0-:1] = alufn[2+0-:1];
          end
          1'h1: begin
            c[8+0-:1] = alufn[3+0-:1];
          end
        endcase
      end
    endcase
    
    case (b[9+0-:1])
      1'h0: begin
        
        case (a[9+0-:1])
          1'h0: begin
            c[9+0-:1] = alufn[0+0-:1];
          end
          1'h1: begin
            c[9+0-:1] = alufn[1+0-:1];
          end
        endcase
      end
      1'h1: begin
        
        case (a[9+0-:1])
          1'h0: begin
            c[9+0-:1] = alufn[2+0-:1];
          end
          1'h1: begin
            c[9+0-:1] = alufn[3+0-:1];
          end
        endcase
      end
    endcase
    
    case (b[10+0-:1])
      1'h0: begin
        
        case (a[10+0-:1])
          1'h0: begin
            c[10+0-:1] = alufn[0+0-:1];
          end
          1'h1: begin
            c[10+0-:1] = alufn[1+0-:1];
          end
        endcase
      end
      1'h1: begin
        
        case (a[10+0-:1])
          1'h0: begin
            c[10+0-:1] = alufn[2+0-:1];
          end
          1'h1: begin
            c[10+0-:1] = alufn[3+0-:1];
          end
        endcase
      end
    endcase
    
    case (b[11+0-:1])
      1'h0: begin
        
        case (a[11+0-:1])
          1'h0: begin
            c[11+0-:1] = alufn[0+0-:1];
          end
          1'h1: begin
            c[11+0-:1] = alufn[1+0-:1];
          end
        endcase
      end
      1'h1: begin
        
        case (a[11+0-:1])
          1'h0: begin
            c[11+0-:1] = alufn[2+0-:1];
          end
          1'h1: begin
            c[11+0-:1] = alufn[3+0-:1];
          end
        endcase
      end
    endcase
    
    case (b[12+0-:1])
      1'h0: begin
        
        case (a[12+0-:1])
          1'h0: begin
            c[12+0-:1] = alufn[0+0-:1];
          end
          1'h1: begin
            c[12+0-:1] = alufn[1+0-:1];
          end
        endcase
      end
      1'h1: begin
        
        case (a[12+0-:1])
          1'h0: begin
            c[12+0-:1] = alufn[2+0-:1];
          end
          1'h1: begin
            c[12+0-:1] = alufn[3+0-:1];
          end
        endcase
      end
    endcase
    
    case (b[13+0-:1])
      1'h0: begin
        
        case (a[13+0-:1])
          1'h0: begin
            c[13+0-:1] = alufn[0+0-:1];
          end
          1'h1: begin
            c[13+0-:1] = alufn[1+0-:1];
          end
        endcase
      end
      1'h1: begin
        
        case (a[13+0-:1])
          1'h0: begin
            c[13+0-:1] = alufn[2+0-:1];
          end
          1'h1: begin
            c[13+0-:1] = alufn[3+0-:1];
          end
        endcase
      end
    endcase
    
    case (b[14+0-:1])
      1'h0: begin
        
        case (a[14+0-:1])
          1'h0: begin
            c[14+0-:1] = alufn[0+0-:1];
          end
          1'h1: begin
            c[14+0-:1] = alufn[1+0-:1];
          end
        endcase
      end
      1'h1: begin
        
        case (a[14+0-:1])
          1'h0: begin
            c[14+0-:1] = alufn[2+0-:1];
          end
          1'h1: begin
            c[14+0-:1] = alufn[3+0-:1];
          end
        endcase
      end
    endcase
    
    case (b[15+0-:1])
      1'h0: begin
        
        case (a[15+0-:1])
          1'h0: begin
            c[15+0-:1] = alufn[0+0-:1];
          end
          1'h1: begin
            c[15+0-:1] = alufn[1+0-:1];
          end
        endcase
      end
      1'h1: begin
        
        case (a[15+0-:1])
          1'h0: begin
            c[15+0-:1] = alufn[2+0-:1];
          end
          1'h1: begin
            c[15+0-:1] = alufn[3+0-:1];
          end
        endcase
      end
    endcase
  end
endmodule
